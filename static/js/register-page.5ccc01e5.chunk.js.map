{"version":3,"file":"static/js/register-page.5ccc01e5.chunk.js","mappings":"oUAeaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KACd,OACE,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,iBAAkBC,EAAAA,GAClBC,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCb,GAASc,EAAAA,EAAAA,IAASH,IAASI,MAAK,YAAe,EAAZC,MAE/Bd,EAAM,CACJe,SAAU,MACVC,MAAO,qCACPC,OAAQ,QACRC,YAAY,IAIhBlB,EAAM,CACJe,SAAU,MACVC,MAAM,qDACNC,OAAQ,UACRC,YAAY,GAEf,IACDP,IACAD,GAAc,EACf,EAvBH,UAyBE,UAAC,KAAD,CAAKS,EAAG,EAAR,WACE,SAAC,KAAD,CAAKC,UAAU,SAAf,UACE,SAAC,IAAD,CACEC,WAAW,UACXC,SAAS,MACTC,WAAW,WACXC,MAAM,aAJR,yBASF,SAAC,KAAD,CAAKC,GAAI,EAAGL,UAAU,OAAtB,UACE,UAAC,KAAD,CAAaM,GAAIC,EAAAA,GAAjB,WACE,UAAC,IAAD,CACEN,WAAW,UACXC,SAAS,KACTC,WAAW,WACXC,MAAM,aAJR,mBAOE,SAAC,EAAAI,EAAD,CACEF,GAAIG,EAAAA,GACJC,iBAAiB,aACjBC,iBAAiB,UACjBC,GAAG,iBACHC,KAAK,OACL9B,KAAK,aAGT,SAAC,KAAD,CAAcA,KAAK,UACnB,UAAC,IAAD,CACEkB,WAAW,UACXC,SAAS,KACTC,WAAW,WACXC,MAAM,aACNU,GAAI,EALN,oBAQE,SAAC,EAAAN,EAAD,CACEF,GAAIG,EAAAA,GACJC,iBAAiB,aACjBC,iBAAiB,UACjBC,GAAG,iBACHC,KAAK,QACL9B,KAAK,cAGT,SAAC,KAAD,CAAcA,KAAK,WACnB,UAAC,IAAD,CACEkB,WAAW,UACXC,SAAS,KACTC,WAAW,WACXC,MAAM,aACNU,GAAI,EALN,uBAQE,SAAC,EAAAN,EAAD,CACEF,GAAIG,EAAAA,GACJC,iBAAiB,aACjBC,iBAAiB,UACjBC,GAAG,iBACHC,KAAK,WACL9B,KAAK,iBAGT,SAAC,KAAD,CAAcA,KAAK,aACnB,SAAC,IAAD,CACE8B,KAAK,SACLE,UAAU,SAAC,MAAD,IACVC,YAAY,SACZC,QAAQ,QACRC,MAAM,OACNJ,GAAI,EANN,8BAeX,E,SC1HYK,EAAe,WACxB,OACA,SAAC,IAAD,CAAMD,MAAM,OAAOE,MAAM,SAASC,eAAe,SAAjD,UACE,SAAC,KAAD,CACEtB,EAAG,EACHuB,SAAS,QACTV,GAAG,aACHW,YAAa,EACbC,aAAc,EACdC,UAAU,KANZ,UAQE,SAAChD,EAAD,OAIP,C,gICfYiD,EAAsBC,EAAAA,GAAW,CAC5C5C,KAAM4C,EAAAA,KACHC,IAAI,IAAI,kBAAMhD,EAAAA,GAAAA,KAAW,gCAAjB,IACRiD,SAAS,YACZC,OAAQH,EAAAA,KACLC,IAAI,IAAI,kBAAMhD,EAAAA,GAAAA,KAAW,4BAAjB,IACRiD,SAAS,cAGD1C,EAAuBwC,EAAAA,GAAW,CAC7C5C,KAAM4C,EAAAA,KACHC,IAAI,IAAI,kBAAMhD,EAAAA,GAAAA,KAAW,gCAAjB,IACRiD,SAAS,YACZ7C,MAAO2C,EAAAA,KAAa3C,MAAM,yBAAyB6C,SAAS,YAC5D5C,SAAU0C,EAAAA,KAAaE,SAAS,cAGrBE,EAAoBJ,EAAAA,GAAW,CAC1C3C,MAAO2C,EAAAA,KAAa3C,MAAM,yBAAyB6C,SAAS,YAC5D5C,SAAU0C,EAAAA,KAAaE,SAAS,a","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","utils/ValidateForm.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auht/auth-operations';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { ValidateRegisterForm } from '../../utils/ValidateForm';\nimport {\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Box,\n  useToast\n} from '@chakra-ui/react';\nimport { GiArchiveRegister } from 'react-icons/gi';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={ValidateRegisterForm}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        dispatch(register(values)).then(({ error }) => {\n          if (error) {\n            toast({\n              position: 'top',\n              title: 'Sorry user with this email exists!',\n              status: 'error',\n              isClosable: true,\n            });\n            return;\n          }\n          toast({\n            position: 'top',\n            title: `Congratulations, you have successfully registered!`,\n            status: 'success',\n            isClosable: true,\n          });\n        });\n        resetForm();\n        setSubmitting(false);\n      }}\n    >\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading\n            fontFamily=\"cursive\"\n            fontSize=\"2xl\"\n            fontWeight=\"semibold\"\n            color=\"purple.800\"\n          >\n            Register\n          </Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <FormControl as={Form}>\n            <FormLabel\n              fontFamily=\"cursive\"\n              fontSize=\"md\"\n              fontWeight=\"semibold\"\n              color=\"purple.800\"\n            >\n              Name:\n              <Input\n                as={Field}\n                focusBorderColor=\"purple.400\"\n                errorBorderColor=\"crimson\"\n                bg=\"blackAlpha.100\"\n                type=\"text\"\n                name=\"name\"\n              />\n            </FormLabel>\n            <ErrorMessage name=\"name\" />\n            <FormLabel\n              fontFamily=\"cursive\"\n              fontSize=\"md\"\n              fontWeight=\"semibold\"\n              color=\"purple.800\"\n              mt={6}\n            >\n              Email:\n              <Input\n                as={Field}\n                focusBorderColor=\"purple.400\"\n                errorBorderColor=\"crimson\"\n                bg=\"blackAlpha.100\"\n                type=\"email\"\n                name=\"email\"\n              />\n            </FormLabel>\n            <ErrorMessage name=\"email\" />\n            <FormLabel\n              fontFamily=\"cursive\"\n              fontSize=\"md\"\n              fontWeight=\"semibold\"\n              color=\"purple.800\"\n              mt={6}\n            >\n              Password:\n              <Input\n                as={Field}\n                focusBorderColor=\"purple.400\"\n                errorBorderColor=\"crimson\"\n                bg=\"blackAlpha.100\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </FormLabel>\n            <ErrorMessage name=\"pasword\" />\n            <Button\n              type=\"submit\"\n              leftIcon={<GiArchiveRegister />}\n              colorScheme=\"purple\"\n              variant=\"solid\"\n              width=\"full\"\n              mt={4}\n            >\n              Sing Up\n            </Button>\n          </FormControl>\n        </Box>\n      </Box>\n    </Formik>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\nimport { Box, Flex } from \"@chakra-ui/react\"\n\nexport const RegisterPage = () => {\n    return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        bg=\"purple.200\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <RegisterForm/>\n      </Box>\n    </Flex>\n  );\n}","import * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nexport const ValidateContactForm = Yup.object({\n  name: Yup.string()\n    .max(20, () => toast.warn('Must be 20 characters or less'))\n    .required('Required'),\n  number: Yup.string()\n    .max(12, () => toast.warn('Must be 12 digits or less'))\n    .required('Required'),\n});\n\nexport const ValidateRegisterForm = Yup.object({\n  name: Yup.string()\n    .max(20, () => toast.warn('Must be 20 characters or less'))\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nexport const ValidateLoginForm = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n"],"names":["RegisterForm","dispatch","useDispatch","toast","useToast","initialValues","name","email","password","validationSchema","ValidateRegisterForm","onSubmit","values","setSubmitting","resetForm","register","then","error","position","title","status","isClosable","p","textAlign","fontFamily","fontSize","fontWeight","color","my","as","Form","I","Field","focusBorderColor","errorBorderColor","bg","type","mt","leftIcon","colorScheme","variant","width","RegisterPage","align","justifyContent","maxWidth","borderWidth","borderRadius","boxShadow","ValidateContactForm","Yup","max","required","number","ValidateLoginForm"],"sourceRoot":""}